BUILD:
[33mbase commit: fceef393a538^1
[0m[33mtarget commit: fceef393a538
[0m[33mchecking out base commit... [0m[33mok (1s)
[0m[33mformatting diff... [0m[33mok (1s)
[0m39 source file(s) touched in the old version
`-- drivers/staging/lustre/lustre/llite/symlink.c
`-- fs/9p/vfs_inode.c
`-- fs/9p/vfs_inode_dotl.c
`-- fs/affs/symlink.c
`-- fs/autofs4/symlink.c
`-- fs/btrfs/inode.c
`-- fs/cifs/cifsfs.c
`-- fs/cifs/cifsfs.h
`-- fs/cifs/link.c
`-- fs/coda/cnode.c
`-- fs/configfs/symlink.c
`-- fs/ecryptfs/inode.c
`-- fs/ext2/symlink.c
`-- fs/ext4/symlink.c
`-- fs/f2fs/namei.c
`-- fs/fuse/dir.c
`-- fs/gfs2/inode.c
`-- fs/hostfs/hostfs_kern.c
`-- fs/jfs/symlink.c
`-- fs/kernfs/symlink.c
`-- fs/libfs.c
`-- fs/minix/inode.c
`-- fs/namei.c
`-- fs/ncpfs/inode.c
`-- fs/nfs/symlink.c
`-- fs/nilfs2/namei.c
`-- fs/ocfs2/symlink.c
`-- fs/overlayfs/inode.c
`-- fs/proc/base.c
`-- fs/proc/inode.c
`-- fs/proc/namespaces.c
`-- fs/proc/self.c
`-- fs/proc/thread_self.c
`-- fs/reiserfs/namei.c
`-- fs/squashfs/symlink.c
`-- fs/sysv/inode.c
`-- fs/xfs/xfs_iops.c
`-- include/linux/fs.h
`-- mm/shmem.c
40 source file(s) touched in the new version
`-- drivers/staging/lustre/lustre/llite/symlink.c
`-- fs/9p/vfs_inode.c
`-- fs/9p/vfs_inode_dotl.c
`-- fs/affs/symlink.c
`-- fs/autofs4/symlink.c
`-- fs/btrfs/inode.c
`-- fs/cifs/cifsfs.c
`-- fs/cifs/cifsfs.h
`-- fs/cifs/link.c
`-- fs/coda/cnode.c
`-- fs/configfs/symlink.c
`-- fs/ecryptfs/inode.c
`-- fs/ext2/symlink.c
`-- fs/ext4/symlink.c
`-- fs/f2fs/namei.c
`-- fs/fuse/dir.c
`-- fs/gfs2/inode.c
`-- fs/hostfs/hostfs_kern.c
`-- fs/jfs/symlink.c
`-- fs/kernfs/symlink.c
`-- fs/libfs.c
`-- fs/minix/inode.c
`-- fs/namei.c
`-- fs/ncpfs/inode.c
`-- fs/nfs/symlink.c
`-- fs/nilfs2/namei.c
`-- fs/ocfs2/symlink.c
`-- fs/overlayfs/inode.c
`-- fs/proc/base.c
`-- fs/proc/inode.c
`-- fs/proc/namespaces.c
`-- fs/proc/self.c
`-- fs/proc/thread_self.c
`-- fs/reiserfs/namei.c
`-- fs/squashfs/symlink.c
`-- fs/sysv/inode.c
`-- fs/xfs/xfs_iops.c
`-- include/linux/delayed_call.h
`-- include/linux/fs.h
`-- mm/shmem.c
[33mIgnore files that are created or deleted by the patch.
[0m[33mcompile base commit... [0m[33mok (112s)
[0m[33mapply [0m[33mfceef393a538... [0m[33mok (112s)
[0m[33mcompile target commit... [0m[33mok (167s)
[0mPREPARE:
[33mcollect AST for functions: v9fs_symlink_inode_operations@fs_9p_vfs_inode.c,reiserfs_add_entry@fs_namei.c,v9fs_symlink_inode_operations_dotl@fs_9p_vfs_inode_dotl.c,f2fs_symlink_inode_operations@fs_f2fs_namei.c,sysv_symlink_inode_operations@fs_sysv_inode.c,shmem_symlink_inode_operations@mm_shmem.c,ext2_symlink_inode_operations@fs_ext2_symlink.c,reiserfs_rmdir@fs_namei.c,reiserfs_empty_dir@fs_namei.c,btrfs_symlink_inode_operations@fs_btrfs_inode.c,proc_pid_get_link@fs_proc_base.c,autofs4_get_link@fs_autofs4_symlink.c,proc_thread_self_inode_operations@fs_proc_thread_self.c,proc_put_link@fs_proc_inode.c,proc_self_get_link@fs_proc_self.c,proc_self_inode_operations@fs_proc_self.c,hostfs_get_link@fs_hostfs_hostfs_kern.c,ext4_encrypted_symlink_inode_operations@fs_ext4_symlink.c,affs_symlink_inode_operations@fs_affs_symlink.c,nilfs_symlink_inode_operations@fs_nilfs2_namei.c,gfs2_get_link@fs_gfs2_inode.c,ext4_encrypted_get_link@fs_ext4_symlink.c,nfs_symlink_inode_operations@fs_nfs_symlink.c,cifs_get_link@fs_cifs_link.c,ll_put_link@drivers_staging_lustre_lustre_llite_symlink.c,ecryptfs_symlink_iops@fs_ecryptfs_inode.c,configfs_symlink_inode_operations@fs_configfs_symlink.c,cifs_symlink_inode_ops@fs_cifs_cifsfs.c,kernfs_iop_get_link@fs_kernfs_symlink.c,nfs_get_link@fs_nfs_symlink.c,ocfs2_symlink_inode_operations@fs_ocfs2_symlink.c,ll_get_link@drivers_staging_lustre_lustre_llite_symlink.c,xfs_vn_get_link@fs_xfs_xfs_iops.c,simple_get_link@fs_libfs.c,ecryptfs_get_link@fs_ecryptfs_inode.c,v9fs_vfs_get_link_dotl@fs_9p_vfs_inode_dotl.c,reiserfs_unlink@fs_namei.c,shmem_put_link@mm_shmem.c,fuse_symlink_inode_operations@fs_fuse_dir.c,proc_map_files_get_link@fs_proc_base.c,coda_symlink_inode_operations@fs_coda_cnode.c,gfs2_symlink_iops@fs_gfs2_inode.c,proc_ns_get_link@fs_proc_namespaces.c,proc_link_inode_operations@fs_proc_inode.c,minix_symlink_inode_operations@fs_minix_inode.c,squashfs_symlink_inode_ops@fs_squashfs_symlink.c,v9fs_vfs_get_link@fs_9p_vfs_inode.c,hostfs_link_iops@fs_hostfs_hostfs_kern.c,ext4_symlink_inode_operations@fs_ext4_symlink.c,fuse_get_link@fs_fuse_dir.c,ll_fast_symlink_inode_operations@drivers_staging_lustre_lustre_llite_symlink.c,configfs_get_link@fs_configfs_symlink.c,f2fs_encrypted_symlink_inode_operations@fs_f2fs_namei.c,ovl_symlink_inode_operations@fs_overlayfs_inode.c,kernfs_symlink_iops@fs_kernfs_symlink.c,f2fs_encrypted_get_link@fs_f2fs_namei.c,jfs_symlink_inode_operations@fs_jfs_symlink.c,xfs_symlink_inode_operations@fs_xfs_xfs_iops.c,drop_new_inode@fs_namei.c,reiserfs_mkdir@fs_namei.c,proc_get_link@fs_proc_inode.c,f2fs_get_link@fs_f2fs_namei.c,proc_thread_self_get_link@fs_proc_thread_self.c,shmem_get_link@mm_shmem.c,ovl_get_link@fs_overlayfs_inode.c,ncp_symlink_inode_operations@fs_ncpfs_inode.c
[0m[33mTransforming and linking bitcode files...
[0m[33m16s
[0mANALYZE:
COCCIGEN:
//# pattern-3, witnesses: 31
@@
expression F1;
identifier s;
@@
 struct inode_operations s = {
-    .put_link = F1,
 };
//# pattern-21, witnesses: 4
@r0@
identifier i, fn;
@@
struct inode_operations i = {
    .get_link = fn,
};
@@
identifier cookie;
identifier dentry;
identifier inode;
identifier r0.fn;
@@
- const char * fn(struct dentry * dentry, struct inode * inode, void ** cookie)
+ const char * fn(struct dentry * dentry, struct inode * inode, struct delayed_call * done)
 { ... }
//# pattern-1, witnesses: 2
@r1@
identifier i, fn;
@@
struct inode_operations i = {
    .get_link = fn,
};
@@
identifier dentry;
identifier done;
identifier inode;
identifier r1.fn;
@@
 const char * fn(struct dentry * dentry, struct inode * inode, struct delayed_call * done)
 {
     <...
- return *cookie = paddr;
+ set_delayed_call(done, kfree_link, paddr);
+ return paddr;
     ...>
 }
//# pattern-7, witnesses: 2
@r2@
identifier i, fn;
@@
struct inode_operations i = {
    .get_link = fn,
};
@@
identifier dentry;
identifier done;
identifier inode;
identifier r2.fn;
@@
 const char * fn(struct dentry * dentry, struct inode * inode, struct delayed_call * done)
 {
     <...
- return *cookie = name;
+ set_delayed_call(done, kfree_link, name);
+ return name;
     ...>
 }
//# pattern-19, witnesses: 2
@@
identifier dentry;
identifier done;
identifier inode;
@@
 const char * ovl_get_link(struct dentry * dentry, struct inode * inode, struct delayed_call * done)
 {
     <...
- struct ovl_link_data * data = NULL;
- if (realinode->i_op->put_link) {
- data = kmalloc(sizeof(unsigned long), GFP_KERNEL);
- if (!data) {
- return ERR_PTR(-ENOMEM);
- }
- data->realdentry = realdentry;
- }
     ...>
 }
