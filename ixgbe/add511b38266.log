BUILD:
[33mbase commit: add511b38266^1
[0m[33mtarget commit: add511b38266
[0m[33mchecking out base commit... [0m[33mok (1s)
[0m[33mformatting diff... [0m[33mok (2s)
[0m7 source file(s) touched in the old version
`-- drivers/net/ethernet/emulex/benet/be_main.c
`-- drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
`-- drivers/net/ethernet/rocker/rocker.c
`-- include/linux/netdevice.h
`-- net/bridge/br_netlink.c
`-- net/bridge/br_private.h
`-- net/core/rtnetlink.c
7 source file(s) touched in the new version
`-- drivers/net/ethernet/emulex/benet/be_main.c
`-- drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
`-- drivers/net/ethernet/rocker/rocker.c
`-- include/linux/netdevice.h
`-- net/bridge/br_netlink.c
`-- net/bridge/br_private.h
`-- net/core/rtnetlink.c
[33mcompile base commit... [0m[33mok (23s)
[0m[33mapply [0m[33madd511b38266... [0m[33mok (23s)
[0m[33mcompile target commit... [0m[33mok (41s)
[0mPREPARE:
[33mcollect AST for functions: br_setlink@net_bridge_br_netlink.c,rtnl_bridge_setlink@net_core_rtnetlink.c,rocker_port_bridge_setlink@drivers_net_ethernet_rocker_rocker.c,be_ndo_bridge_setlink@drivers_net_ethernet_emulex_benet_be_main.c,br_dellink@net_bridge_br_netlink.c,ixgbe_ndo_bridge_setlink@drivers_net_ethernet_intel_ixgbe_ixgbe_main.c,rtnl_bridge_dellink@net_core_rtnetlink.c
[0m[33mTransforming and linking bitcode files...
[0m[33m5s
[0mANALYZE:
COCCIGEN:
//# pattern-1, witnesses: 2
@r0@
identifier fn;
expression P0, P1, P3;
@@
rtnl_register(P0, P1, fn, P3)
@@
expression V0;
identifier nlh;
identifier skb;
@@
 int rtnl_bridge_setlink(struct sk_buff * skb, struct nlmsghdr * nlh)
 {
     <...
- V0->netdev_ops->ndo_bridge_setlink(dev, nlh)
+ V0->netdev_ops->ndo_bridge_setlink(dev, nlh, flags)
     ...>
 }
//# pattern-3, witnesses: 2
@r1@
identifier fn;
expression P0, P1, P3;
@@
rtnl_register(P0, P1, fn, P3)
@@
expression V0;
identifier nlh;
identifier skb;
@@
 int rtnl_bridge_dellink(struct sk_buff * skb, struct nlmsghdr * nlh)
 {
     <...
- V0->netdev_ops->ndo_bridge_dellink(dev, nlh)
+ V0->netdev_ops->ndo_bridge_dellink(dev, nlh, flags)
     ...>
 }
//# pattern-4, witnesses: 2
@r2@
identifier i, fn;
@@
struct net_device_ops i = {
    .ndo_bridge_setlink = fn,
};
@@
identifier dev;
identifier nlh;
identifier r2.fn;
typedef u16;
@@
- int fn(struct net_device * dev, struct nlmsghdr * nlh)
+ int fn(struct net_device * dev, struct nlmsghdr * nlh, u16 flags)
 { ... }
//# pattern-5, witnesses: 2
@r3@
identifier i, fn;
@@
struct net_device_ops i = {
    .ndo_bridge_setlink = fn,
};
@@
identifier dev;
identifier flags;
identifier nlh;
identifier r3.fn;
typedef u16;
@@
 int fn(struct net_device * dev, struct nlmsghdr * nlh, u16 flags)
 { ... }
