BUILD:
[33mbase commit: f6f6424ba773^1
[0m[33mtarget commit: f6f6424ba773
[0m[33mchecking out base commit... [0m[33mok (0s)
[0m[33mformatting diff... [0m[33mok (1s)
[0m10 source file(s) touched in the old version
`-- drivers/net/ethernet/intel/i40e/i40e_main.c
`-- drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
`-- drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
`-- drivers/net/macvlan.c
`-- drivers/net/vxlan.c
`-- include/linux/netdevice.h
`-- include/linux/rtnetlink.h
`-- net/bridge/br_fdb.c
`-- net/bridge/br_private.h
`-- net/core/rtnetlink.c
10 source file(s) touched in the new version
`-- drivers/net/ethernet/intel/i40e/i40e_main.c
`-- drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
`-- drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
`-- drivers/net/macvlan.c
`-- drivers/net/vxlan.c
`-- include/linux/netdevice.h
`-- include/linux/rtnetlink.h
`-- net/bridge/br_fdb.c
`-- net/bridge/br_private.h
`-- net/core/rtnetlink.c
[33mcompile base commit... [0m[33mok (28s)
[0m[33mapply [0m[33mf6f6424ba773... [0m[33mok (28s)
[0m[33mcompile target commit... [0m[33mok (48s)
[0mPREPARE:
[33mcollect AST for functions: vxlan_fdb_add@drivers_net_vxlan.c,macvlan_fdb_del@drivers_net_macvlan.c,macvlan_fdb_add@drivers_net_macvlan.c,rtnl_fdb_add@net_core_rtnetlink.c,br_fdb_add@net_bridge_br_fdb.c,i40e_ndo_fdb_add@drivers_net_ethernet_intel_i40e_i40e_main.c,br_fdb_delete@net_bridge_br_fdb.c,qlcnic_fdb_add@drivers_net_ethernet_qlogic_qlcnic_qlcnic_main.c,ndo_dflt_fdb_del@net_core_rtnetlink.c,ndo_dflt_fdb_add@net_core_rtnetlink.c,rtnl_fdb_del@net_core_rtnetlink.c,ixgbe_ndo_fdb_add@drivers_net_ethernet_intel_ixgbe_ixgbe_main.c,qlcnic_fdb_del@drivers_net_ethernet_qlogic_qlcnic_qlcnic_main.c,vxlan_fdb_delete@drivers_net_vxlan.c,qlcnic_start_firmware@drivers_net_ethernet_qlogic_qlcnic_qlcnic_main.c
[0m[33mTransforming and linking bitcode files...
[0m[33m6s
[0mANALYZE:
COCCIGEN:
//# pattern-5, witnesses: 3
@r0@
identifier i, fn;
@@
struct net_device_ops i = {
    .ndo_fdb_add = fn,
};
@@
identifier addr;
identifier dev;
identifier flags;
identifier ndm;
identifier r0.fn;
identifier tb;
typedef u16;
@@
- int fn(struct ndmsg * ndm, struct nlattr ** tb, struct net_device * dev, const unsigned char * addr, u16 flags)
+ int fn(struct ndmsg * ndm, struct nlattr ** tb, struct net_device * dev, const unsigned char * addr, u16 vid, u16 flags)
 { ... }
//# pattern-1, witnesses: 2
@r1@
identifier i, fn;
@@
struct net_device_ops i = {
    .ndo_fdb_del = fn,
};
@@
identifier addr;
identifier dev;
identifier ndm;
identifier r1.fn;
identifier tb;
typedef u16;
@@
- int fn(struct ndmsg * ndm, struct nlattr ** tb, struct net_device * dev, const unsigned char * addr)
+ int fn(struct ndmsg * ndm, struct nlattr ** tb, struct net_device * dev, const unsigned char * addr, u16 vid)
 { ... }
//# pattern-4, witnesses: 2
@r2@
identifier i, fn;
@@
struct net_device_ops i = {
    .ndo_fdb_add = fn,
};
@@
identifier addr;
identifier flags;
identifier ndm;
identifier netdev;
identifier r2.fn;
identifier tb;
typedef u16;
identifier vid;
@@
 int fn(struct ndmsg * ndm, struct nlattr ** tb, struct net_device * netdev, const unsigned char * addr, u16 vid, u16 flags)
 {
     <...
- ndo_dflt_fdb_add(ndm, tb, netdev, addr, flags)
+ ndo_dflt_fdb_add(ndm, tb, netdev, addr, vid, flags)
     ...>
 }
