BUILD:
[33mbase commit: 46c264daaaa5^1
[0m[33mtarget commit: 46c264daaaa5
[0m[33mchecking out base commit... [0m[33mok (1s)
[0m[33mformatting diff... [0m[33mok (1s)
[0m9 source file(s) touched in the old version
`-- drivers/net/ethernet/emulex/benet/be_main.c
`-- drivers/net/ethernet/intel/i40e/i40e_main.c
`-- drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
`-- drivers/net/ethernet/rocker/rocker.c
`-- include/linux/netdevice.h
`-- include/linux/rtnetlink.h
`-- net/bridge/br_netlink.c
`-- net/bridge/br_private.h
`-- net/core/rtnetlink.c
9 source file(s) touched in the new version
`-- drivers/net/ethernet/emulex/benet/be_main.c
`-- drivers/net/ethernet/intel/i40e/i40e_main.c
`-- drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
`-- drivers/net/ethernet/rocker/rocker.c
`-- include/linux/netdevice.h
`-- include/linux/rtnetlink.h
`-- net/bridge/br_netlink.c
`-- net/bridge/br_private.h
`-- net/core/rtnetlink.c
[33mcompile base commit... [0m[33mok (24s)
[0m[33mapply [0m[33m46c264daaaa5... [0m[33mok (24s)
[0m[33mcompile target commit... [0m[33mok (44s)
[0mPREPARE:
[33mcollect AST for functions: br_getlink@net_bridge_br_netlink.c,rtnl_bridge_getlink@net_core_rtnetlink.c,ndo_dflt_bridge_getlink@net_core_rtnetlink.c,be_ndo_bridge_getlink@drivers_net_ethernet_emulex_benet_be_main.c,ixgbe_ndo_bridge_getlink@drivers_net_ethernet_intel_ixgbe_ixgbe_main.c,rtnl_bridge_notify@net_core_rtnetlink.c,rocker_port_bridge_getlink@drivers_net_ethernet_rocker_rocker.c
[0m[33mTransforming and linking bitcode files...
[0m[33m5s
[0mANALYZE:
COCCIGEN:
//# pattern-1, witnesses: 2
@r0@
identifier i, fn;
@@
struct net_device_ops i = {
    .ndo_bridge_getlink = fn,
};
@@
expression E0;
expression E1;
expression E2;
identifier dev;
identifier filter_mask;
identifier pid;
identifier r0.fn;
identifier seq;
identifier skb;
typedef u32;
@@
- int fn(struct sk_buff * skb, u32 pid, u32 seq, struct net_device * dev, u32 filter_mask)
+ int fn(struct sk_buff * skb, u32 pid, u32 seq, struct net_device * dev, u32 filter_mask, int nlflags)
 {
     <...
- ndo_dflt_bridge_getlink(skb, pid, seq, dev, E0, E1, E2)
+ ndo_dflt_bridge_getlink(skb, pid, seq, dev, E0, E1, E2, nlflags)
     ...>
 }
//# pattern-3, witnesses: 2
@r1@
identifier fn;
expression P0, P1, P2;
@@
rtnl_register(P0, P1, P2, fn)
@@
expression E0;
identifier cb;
identifier skb;
@@
 int rtnl_bridge_getlink(struct sk_buff * skb, struct netlink_callback * cb)
 {
     <...
- E0->ndo_bridge_getlink(skb, portid, seq, dev, filter_mask)
+ E0->ndo_bridge_getlink(skb, portid, seq, dev, filter_mask, NLM_F_MULTI)
     ...>
 }
