diff --git a/drivers/input/keyreset.c b/drivers/input/keyreset.c
index 7e5222aec7c1..2777f45f7f17 100644
--- a/drivers/input/keyreset.c
+++ b/drivers/input/keyreset.c
@@ -53,14 +53,14 @@ static int keyreset_probe(struct platform_device *pdev)
 {
 	int ret = -ENOMEM;
 	struct keycombo_platform_data *pdata_child;
-	struct keyreset_platform_data *pdata = pdev->dev.platform_data;
+	struct keyreset_platform_data *pdata = pdev->parent.platform_data;
 	int up_size = 0, down_size = 0, size;
 	int key, *keyp;
 	struct keyreset_state *state;
 
 	if (!pdata)
 		return -EINVAL;
-	state = devm_kzalloc(&pdev->dev, sizeof(*state), GFP_KERNEL);
+	state = devm_kzalloc(&pdev->parent, sizeof(*state), GFP_KERNEL);
 	if (!state)
 		return -ENOMEM;
 
@@ -68,7 +68,7 @@ static int keyreset_probe(struct platform_device *pdev)
 							PLATFORM_DEVID_AUTO);
 	if (!state->pdev_child)
 		return -ENOMEM;
-	state->pdev_child->dev.parent = &pdev->dev;
+	state->pdev_child->parent.parent = &pdev->parent;
 	INIT_WORK(&state->restart_work, do_restart);
 
 	keyp = pdata->keys_down;
@@ -87,13 +87,14 @@ static int keyreset_probe(struct platform_device *pdev)
 	}
 	size = sizeof(struct keycombo_platform_data)
 			+ sizeof(int) * (down_size + 1);
-	pdata_child = devm_kzalloc(&pdev->dev, size, GFP_KERNEL);
+	pdata_child = devm_kzalloc(&pdev->parent, size, GFP_KERNEL);
 	if (!pdata_child)
 		goto error;
 	memcpy(pdata_child->keys_down, pdata->keys_down,
 						sizeof(int) * down_size);
 	if (up_size > 0) {
-		pdata_child->keys_up = devm_kzalloc(&pdev->dev, up_size + 1,
+		pdata_child->keys_up = devm_kzalloc(&pdev->parent,
+								up_size + 1,
 								GFP_KERNEL);
 		if (!pdata_child->keys_up)
 			goto error;
