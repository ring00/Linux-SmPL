diff -u -p a/fs-writeback.c b/fs-writeback.c
--- a/fs-writeback.c
+++ b/fs-writeback.c
@@ -66,7 +66,7 @@ int nr_pdflush_threads;
  */
 int writeback_in_progress(struct backing_dev_info *bdi)
 {
-	return test_bit(BDI_writeback_running, &bdi->state);
+	return test_bit(WB_writeback_running, &bdi->wb.state);
 }
 
 static inline struct backing_dev_info *inode_to_bdi(struct inode *inode)
@@ -849,7 +849,7 @@ long wb_do_writeback(struct bdi_writebac
 	struct wb_writeback_work *work;
 	long wrote = 0;
 
-	set_bit(BDI_writeback_running, &wb->bdi->state);
+	set_bit(WB_writeback_running, &wb->bdi->state);
 	while ((work = get_next_work_item(bdi)) != NULL) {
 		/*
 		 * Override sync mode, in case we must wait for completion
@@ -877,7 +877,7 @@ long wb_do_writeback(struct bdi_writebac
 	 */
 	wrote += wb_check_old_data_flush(wb);
 	wrote += wb_check_background_flush(wb);
-	clear_bit(BDI_writeback_running, &wb->bdi->state);
+	clear_bit(WB_writeback_running, &wb->bdi->state);
 
 	return wrote;
 }
@@ -1075,7 +1075,7 @@ void __mark_inode_dirty(struct inode *in
 			bdi = inode_to_bdi(inode);
 
 			if (bdi_cap_writeback_dirty(bdi)) {
-				WARN(!test_bit(BDI_registered, &bdi->state),
+				WARN(!test_bit(WB_registered, &bdi->wb.state),
 				     "bdi-%s not registered\n", bdi->name);
 
 				/*
