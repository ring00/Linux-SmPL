diff --git a/fs/sdcardfs/packagelist.c b/fs/sdcardfs/packagelist.c
index 5663192f44a2..75f425203e59 100644
--- a/fs/sdcardfs/packagelist.c
+++ b/fs/sdcardfs/packagelist.c
@@ -485,19 +485,12 @@ static inline struct package_details *to_package_details(struct config_item *ite
 	return item ? container_of(item, struct package_details, item) : NULL;
 }
 
-CONFIGFS_ATTR_STRUCT(package_details);
-#define PACKAGE_DETAILS_ATTR(_name, _mode, _show, _store)	\
-struct package_details_attribute package_details_attr_##_name = __CONFIGFS_ATTR(_name, _mode, _show, _store)
-#define PACKAGE_DETAILS_ATTRIBUTE(name) (&package_details_attr_##name.attr)
-
-static ssize_t package_details_appid_show(struct package_details *package_details,
-				      char *page)
+static ssize_t package_details_appid_show(struct config_item *item, char *page)
 {
-	return scnprintf(page, PAGE_SIZE, "%u\n", __get_appid(&package_details->name));
+	return scnprintf(page, PAGE_SIZE, "%u\n", __get_appid(&to_package_details(item)->name));
 }
 
-static ssize_t package_details_appid_store(struct package_details *package_details,
-				       const char *page, size_t count)
+static ssize_t package_details_appid_store(struct config_item *item, const char *page, size_t count)
 {
 	unsigned int tmp;
 	int ret;
@@ -506,7 +499,7 @@ static ssize_t package_details_appid_store(struct package_details *package_detai
 	if (ret)
 		return ret;
 
-	ret = insert_packagelist_entry(&package_details->name, tmp);
+	ret = insert_packagelist_entry(&to_package_details(item)->name, tmp);
 
 	if (ret)
 		return ret;
@@ -514,9 +507,9 @@ static ssize_t package_details_appid_store(struct package_details *package_detai
 	return count;
 }
 
-static ssize_t package_details_excluded_userids_show(struct package_details *package_details,
-				      char *page)
+static ssize_t package_details_excluded_userids_show(struct config_item *item, char *page)
 {
+    struct package_details *package_details = to_package_details(item);
 	struct hashtable_entry *hash_cur;
 	unsigned int hash = package_details->name.hash;
 	int count = 0;
@@ -534,8 +527,7 @@ static ssize_t package_details_excluded_userids_show(struct package_details *pac
 	return count;
 }
 
-static ssize_t package_details_excluded_userids_store(struct package_details *package_details,
-				       const char *page, size_t count)
+static ssize_t package_details_excluded_userids_store(struct config_item *item, const char *page, size_t count)
 {
 	unsigned int tmp;
 	int ret;
@@ -544,7 +536,7 @@ static ssize_t package_details_excluded_userids_store(struct package_details *pa
 	if (ret)
 		return ret;
 
-	ret = insert_userid_exclude_entry(&package_details->name, tmp);
+	ret = insert_userid_exclude_entry(&to_package_details(item)->name, tmp);
 
 	if (ret)
 		return ret;
@@ -552,8 +544,7 @@ static ssize_t package_details_excluded_userids_store(struct package_details *pa
 	return count;
 }
 
-static ssize_t package_details_clear_userid_store(struct package_details *package_details,
-				       const char *page, size_t count)
+static ssize_t package_details_clear_userid_store(struct config_item *item, const char *page, size_t count)
 {
 	unsigned int tmp;
 	int ret;
@@ -561,7 +552,7 @@ static ssize_t package_details_clear_userid_store(struct package_details *packag
 	ret = kstrtouint(page, 10, &tmp);
 	if (ret)
 		return ret;
-	remove_userid_exclude_entry(&package_details->name, tmp);
+	remove_userid_exclude_entry(&to_package_details(item)->name, tmp);
 	return count;
 }
 
@@ -575,24 +566,19 @@ static void package_details_release(struct config_item *item)
 	kfree(package_details);
 }
 
-PACKAGE_DETAILS_ATTR(appid, S_IRUGO | S_IWUGO, package_details_appid_show, package_details_appid_store);
-PACKAGE_DETAILS_ATTR(excluded_userids, S_IRUGO | S_IWUGO,
-		package_details_excluded_userids_show, package_details_excluded_userids_store);
-PACKAGE_DETAILS_ATTR(clear_userid, S_IWUGO, NULL, package_details_clear_userid_store);
+CONFIGFS_ATTR(package_details_, appid);
+CONFIGFS_ATTR(package_details_, excluded_userids);
+CONFIGFS_ATTR_WO(package_details_, clear_userid);
 
 static struct configfs_attribute *package_details_attrs[] = {
-	PACKAGE_DETAILS_ATTRIBUTE(appid),
-	PACKAGE_DETAILS_ATTRIBUTE(excluded_userids),
-	PACKAGE_DETAILS_ATTRIBUTE(clear_userid),
+    &package_details_attr_appid,
+    &package_details_attr_excluded_userids,
+    &package_details_attr_clear_userid,
 	NULL,
 };
 
-CONFIGFS_ATTR_OPS(package_details);
-
 static struct configfs_item_operations package_details_item_ops = {
 	.release = package_details_release,
-	.show_attribute = package_details_attr_show,
-	.store_attribute = package_details_attr_store,
 };
 
 static struct config_item_type package_appid_type = {
@@ -734,12 +720,6 @@ static inline struct packages *to_packages(struct config_item *item)
 	return item ? container_of(to_configfs_subsystem(to_config_group(item)), struct packages, subsystem) : NULL;
 }
 
-CONFIGFS_ATTR_STRUCT(packages);
-#define PACKAGES_ATTR(_name, _mode, _show, _store)	\
-struct packages_attribute packages_attr_##_name = __CONFIGFS_ATTR(_name, _mode, _show, _store)
-#define PACKAGES_ATTR_RO(_name, _show)	\
-struct packages_attribute packages_attr_##_name = __CONFIGFS_ATTR_RO(_name, _show)
-
 static struct config_item *packages_make_item(struct config_group *group, const char *name)
 {
 	struct package_details *package_details;
@@ -760,8 +740,7 @@ static struct config_item *packages_make_item(struct config_group *group, const
 	return &package_details->item;
 }
 
-static ssize_t packages_list_show(struct packages *packages,
-					 char *page)
+static ssize_t packages_list_show(struct config_item *item, char *page)
 {
 	struct hashtable_entry *hash_cur_app;
 	struct hashtable_entry *hash_cur_user;
@@ -793,8 +772,7 @@ static ssize_t packages_list_show(struct packages *packages,
 	return count;
 }
 
-static ssize_t packages_remove_userid_store(struct packages *packages,
-				       const char *page, size_t count)
+static ssize_t packages_remove_userid_store(struct config_item *item, const char *page, size_t count)
 {
 	unsigned int tmp;
 	int ret;
@@ -806,21 +784,16 @@ static ssize_t packages_remove_userid_store(struct packages *packages,
 	return count;
 }
 
-struct packages_attribute packages_attr_packages_gid_list = __CONFIGFS_ATTR_RO(packages_gid.list, packages_list_show);
-PACKAGES_ATTR(remove_userid, S_IWUGO, NULL, packages_remove_userid_store);
+CONFIGFS_ATTR_RO(packages_, list);
+
+CONFIGFS_ATTR_WO(packages_, remove_userid);
 
 static struct configfs_attribute *packages_attrs[] = {
-	&packages_attr_packages_gid_list.attr,
-	&packages_attr_remove_userid.attr,
+    &packages_attr_list,
+    &packages_attr_remove_userid,
 	NULL,
 };
 
-CONFIGFS_ATTR_OPS(packages)
-static struct configfs_item_operations packages_item_ops = {
-	.show_attribute = packages_attr_show,
-	.store_attribute = packages_attr_store,
-};
-
 /*
  * Note that, since no extra work is required on ->drop_item(),
  * no ->drop_item() is provided.
@@ -830,7 +803,6 @@ static struct configfs_group_operations packages_group_ops = {
 };
 
 static struct config_item_type packages_type = {
-	.ct_item_ops	= &packages_item_ops,
 	.ct_group_ops	= &packages_group_ops,
 	.ct_attrs	= packages_attrs,
 	.ct_owner	= THIS_MODULE,
@@ -841,22 +813,20 @@ struct config_group *sd_default_groups[] = {
 	NULL,
 };
 
-static struct packages sdcardfs_packages = {
-	.subsystem = {
-		.su_group = {
-			.cg_item = {
-				.ci_namebuf = "sdcardfs",
-				.ci_type = &packages_type,
-			},
-			.default_groups = sd_default_groups,
+static struct configfs_subsystem sdcardfs_packages = {
+	.su_group = {
+		.cg_item = {
+			.ci_namebuf = "sdcardfs",
+			.ci_type = &packages_type,
 		},
+		.default_groups = sd_default_groups,
 	},
 };
 
 static int configfs_sdcardfs_init(void)
 {
 	int ret, i;
-	struct configfs_subsystem *subsys = &sdcardfs_packages.subsystem;
+	struct configfs_subsystem *subsys = &sdcardfs_packages;
 
 	for (i = 0; sd_default_groups[i]; i++)
 		config_group_init(sd_default_groups[i]);
@@ -873,7 +843,7 @@ static int configfs_sdcardfs_init(void)
 
 static void configfs_sdcardfs_exit(void)
 {
-	configfs_unregister_subsystem(&sdcardfs_packages.subsystem);
+	configfs_unregister_subsystem(&sdcardfs_packages);
 }
 
 int packagelist_init(void)
