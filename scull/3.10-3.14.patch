diff --git a/scull/access.c b/scull/access.c
index b13ba77761e4..a17cfe407297 100644
--- a/scull/access.c
+++ b/scull/access.c
@@ -95,7 +95,7 @@ struct file_operations scull_sngl_fops = {
 
 static struct scull_dev scull_u_device;
 static int scull_u_count;	/* initialized to 0 by default */
-static uid_t scull_u_owner;	/* initialized to 0 by default */
+static kuid_t scull_u_owner;	/* initialized to 0 by default */
 static DEFINE_SPINLOCK(scull_u_lock);
 
 static int scull_u_open(struct inode *inode, struct file *filp)
@@ -104,8 +104,8 @@ static int scull_u_open(struct inode *inode, struct file *filp)
 
 	spin_lock(&scull_u_lock);
 	if (scull_u_count && 
-			(scull_u_owner != current_uid()) &&  /* allow user */
-			(scull_u_owner != current_euid()) && /* allow whoever did su */
+			(!uid_eq(scull_u_owner , current_uid()) ) &&  /* allow user */
+			(!uid_eq(scull_u_owner , current_euid()) ) && /* allow whoever did su */
 			!capable(CAP_DAC_OVERRIDE)) { /* still allow root */
 		spin_unlock(&scull_u_lock);
 		return -EBUSY;   /* -EPERM would confuse the user */
@@ -156,15 +156,15 @@ struct file_operations scull_user_fops = {
 
 static struct scull_dev scull_w_device;
 static int scull_w_count;	/* initialized to 0 by default */
-static uid_t scull_w_owner;	/* initialized to 0 by default */
+static kuid_t scull_w_owner;	/* initialized to 0 by default */
 static DECLARE_WAIT_QUEUE_HEAD(scull_w_wait);
 static DEFINE_SPINLOCK(scull_w_lock);
 
 static inline int scull_w_available(void)
 {
 	return scull_w_count == 0 ||
-		scull_w_owner == current_uid() ||
-		scull_w_owner == current_euid() ||
+		uid_eq(scull_w_owner , current_uid()) ||
+		uid_eq(scull_w_owner , current_euid()) ||
 		capable(CAP_DAC_OVERRIDE);
 }
 
