diff --git a/fs/btrfs/compression.c b/fs/btrfs/compression.c
index bfe42b03eaf9..4ed916bce644 100644
--- a/fs/btrfs/compression.c
+++ b/fs/btrfs/compression.c
@@ -96,7 +96,7 @@ static struct bio *compressed_bio_alloc(struct block_device *bdev,
 {
 	int nr_vecs;
 
-	nr_vecs = bio_get_nr_vecs(bdev);
+	nr_vecs = BIO_MAX_PAGES;
 	return btrfs_bio_alloc(bdev, first_byte >> 9, nr_vecs, gfp_flags);
 }
 
diff --git a/fs/btrfs/extent_io.c b/fs/btrfs/extent_io.c
index 7055d11c1efd..3abc2322b712 100644
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@ -1904,7 +1904,7 @@ static int submit_extent_page(int rw, struct extent_io_tree *tree,
 	if (this_compressed)
 		nr = BIO_MAX_PAGES;
 	else
-		nr = bio_get_nr_vecs(bdev);
+		nr = BIO_MAX_PAGES;
 
 	bio = btrfs_bio_alloc(bdev, sector, nr, GFP_NOFS | __GFP_HIGH);
 	if (!bio)
diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 3601f0aebddf..1eb4d7b341c2 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -5876,7 +5876,7 @@ out:
 static struct bio *btrfs_dio_bio_alloc(struct block_device *bdev,
 				       u64 first_sector, gfp_t gfp_flags)
 {
-	int nr_vecs = bio_get_nr_vecs(bdev);
+	int nr_vecs = BIO_MAX_PAGES;
 	return btrfs_bio_alloc(bdev, first_sector, nr_vecs, gfp_flags);
 }
 
diff --git a/fs/direct-io.c b/fs/direct-io.c
index ac5f164170e3..e8e0611a049b 100644
--- a/fs/direct-io.c
+++ b/fs/direct-io.c
@@ -585,7 +585,7 @@ static int dio_new_bio(struct dio *dio, sector_t start_sector)
 	if (ret)
 		goto out;
 	sector = start_sector << (dio->blkbits - 9);
-	nr_pages = min(dio->pages_in_io, bio_get_nr_vecs(dio->map_bh.b_bdev));
+	nr_pages = min(dio->pages_in_io, BIO_MAX_PAGES);
 	nr_pages = min(nr_pages, BIO_MAX_PAGES);
 	BUG_ON(nr_pages <= 0);
 	dio_bio_alloc(dio, dio->map_bh.b_bdev, sector, nr_pages);
diff --git a/fs/ext4/page-io.c b/fs/ext4/page-io.c
index 7bb8f76d470a..2762fb944c23 100644
--- a/fs/ext4/page-io.c
+++ b/fs/ext4/page-io.c
@@ -279,7 +279,7 @@ static int io_submit_init(struct ext4_io_submit *io,
 {
 	ext4_io_end_t *io_end;
 	struct page *page = bh->b_page;
-	int nvecs = bio_get_nr_vecs(bh->b_bdev);
+	int nvecs = BIO_MAX_PAGES;
 	struct bio *bio;
 
 	io_end = ext4_init_io_end(inode, GFP_NOFS);
diff --git a/fs/mpage.c b/fs/mpage.c
index fdfae9fa98cd..ad861952f4be 100644
--- a/fs/mpage.c
+++ b/fs/mpage.c
@@ -287,8 +287,8 @@ do_mpage_readpage(struct bio *bio, struct page *page, unsigned nr_pages,
 alloc_new:
 	if (bio == NULL) {
 		bio = mpage_alloc(bdev, blocks[0] << (blkbits - 9),
-			  	min_t(int, nr_pages, bio_get_nr_vecs(bdev)),
-				GFP_KERNEL);
+			  	min_t(int, nr_pages, BIO_MAX_PAGES),
+			  	GFP_KERNEL);
 		if (bio == NULL)
 			goto confused;
 	}
@@ -580,7 +580,7 @@ page_is_mapped:
 alloc_new:
 	if (bio == NULL) {
 		bio = mpage_alloc(bdev, blocks[0] << (blkbits - 9),
-				bio_get_nr_vecs(bdev), GFP_NOFS|__GFP_HIGH);
+				BIO_MAX_PAGES, GFP_NOFS|__GFP_HIGH);
 		if (bio == NULL)
 			goto confused;
 	}
diff --git a/fs/nilfs2/segbuf.c b/fs/nilfs2/segbuf.c
index 850a7c0228fb..3b1db9cb3e56 100644
--- a/fs/nilfs2/segbuf.c
+++ b/fs/nilfs2/segbuf.c
@@ -427,7 +427,7 @@ static void nilfs_segbuf_prepare_write(struct nilfs_segment_buffer *segbuf,
 {
 	wi->bio = NULL;
 	wi->rest_blocks = segbuf->sb_sum.nblocks;
-	wi->max_pages = bio_get_nr_vecs(wi->nilfs->ns_bdev);
+	wi->max_pages = BIO_MAX_PAGES;
 	wi->nr_vecs = min(wi->max_pages, wi->rest_blocks);
 	wi->start = wi->end = 0;
 	wi->blocknr = segbuf->sb_pseg_start;
diff --git a/fs/xfs/linux-2.6/xfs_aops.c b/fs/xfs/linux-2.6/xfs_aops.c
index 79ce38be15a1..6686182e26d9 100644
--- a/fs/xfs/linux-2.6/xfs_aops.c
+++ b/fs/xfs/linux-2.6/xfs_aops.c
@@ -420,7 +420,7 @@ STATIC struct bio *
 xfs_alloc_ioend_bio(
 	struct buffer_head	*bh)
 {
-	int			nvecs = bio_get_nr_vecs(bh->b_bdev);
+	int			nvecs = BIO_MAX_PAGES;
 	struct bio		*bio = bio_alloc(GFP_NOIO, nvecs);
 
 	ASSERT(bio->bi_private == NULL);
