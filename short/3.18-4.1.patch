diff --git a/short/short.c b/short/short.c
index 90d3feb6b31d..ce9e88c4b9c8 100644
--- a/short/short.c
+++ b/short/short.c
@@ -188,7 +188,7 @@ ssize_t do_short_read (struct inode *inode, struct file *filp, char __user *buf,
  */
 ssize_t short_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)
 {
-	return do_short_read(filp->f_dentry->d_inode, filp, buf, count, f_pos);
+	return do_short_read(filp->f_path.dentry->d_inode, filp, buf, count, f_pos);
 }
 
 
@@ -250,7 +250,7 @@ ssize_t do_short_write (struct inode *inode, struct file *filp, const char __use
 ssize_t short_write(struct file *filp, const char __user *buf, size_t count,
 		loff_t *f_pos)
 {
-	return do_short_write(filp->f_dentry->d_inode, filp, buf, count, f_pos);
+	return do_short_write(filp->f_path.dentry->d_inode, filp, buf, count, f_pos);
 }
 
 
@@ -510,7 +510,7 @@ void short_selfprobe(void)
       */
 	for (i = 0; trials[i]; i++)
 		tried[i] = request_irq(trials[i], short_probing,
-				IRQF_DISABLED, "short probe", NULL);
+				0x0, "short probe", NULL);
 
 	do {
 		short_irq = 0; /* none got, yet */
@@ -620,7 +620,7 @@ int short_init(void)
 	 */
 	if (short_irq >= 0 && share > 0) {
 		result = request_irq(short_irq, short_sh_interrupt,
-				IRQF_SHARED | IRQF_DISABLED,"short",
+				IRQF_SHARED ,"short",
 				short_sh_interrupt);
 		if (result) {
 			printk(KERN_INFO "short: can't get assigned irq %i\n", short_irq);
@@ -634,7 +634,7 @@ int short_init(void)
 
 	if (short_irq >= 0) {
 		result = request_irq(short_irq, short_interrupt,
-				IRQF_DISABLED, "short", NULL);
+				0x0, "short", NULL);
 		if (result) {
 			printk(KERN_INFO "short: can't get assigned irq %i\n",
 					short_irq);
@@ -654,7 +654,7 @@ int short_init(void)
 		result = request_irq(short_irq,
 				tasklet ? short_tl_interrupt :
 				short_wq_interrupt,
-				IRQF_DISABLED,"short-bh", NULL);
+				0x0,"short-bh", NULL);
 		if (result) {
 			printk(KERN_INFO "short-bh: can't get assigned irq %i\n",
 					short_irq);
